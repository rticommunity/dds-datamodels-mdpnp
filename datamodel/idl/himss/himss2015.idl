@annotation doc {
    string value default "TBD";
};

@doc("@file himss2015.idl \
  DDS data objects and topics to be shared by MDPnP and \
  DocBox for HIMSS 2015. \
  @author Wayne Saari \
  2 APR 2015")

module himss
{
    const long DDS_DOMAIN_ID_MANAGER = 2;

    const long SHORTSHORT_STRING_LEN  = 16;
    const long SHORT_STRING_LEN   = 32;
    const long MEDIUM_STRING_LEN  = 64;
    const long LONG_STRING_LEN    = 128;

    const long MAX_ICE_UDI_LENGTH = 16;

    const long MAX_ASSESSMENT_ENTRIES = 50;

    /**
    * Identifiers for Dash measurements of interest to DICES and OpenICE
    */
    @doc("HR BPM") const long MDC_ECG_HEART_RATE = 16770;
    @doc("RR BPM") const long MDC_TTHOR_RESP_RATE = 20506;
    @doc("ABP mmHg") const long MDC_PRESS_BLD_ART_ABP_DIA = 18966;
    @doc("ABP mmHg") const long MDC_PRESS_BLD_ART_ABP_SYS = 18965;
    @doc("ABP Mean mmHg") const long MDC_PRESS_BLD_ART_ABP_MEAN = 18967;
    @doc("SpO2 %") const long MDC_PULS_OXIM_SAT_O2 = 19384;
    @doc("PR BPM") const long MDC_PULS_OXIM_PULS_RATE = 18458;

    @doc("Date, time")
    typedef long TIME_T;

    @nested
    struct Timespec
    {
        TIME_T seconds;
        long nanoseconds;
    };

    @doc("AbsoluteTime specifies the number of seconds and nanoseconds since \
        1970-01-01 00:00:00 UTC.")
    typedef Timespec AbsoluteTime;

    @doc("The Date data type specifies a certain calendar date. (NOT BCD-encoded.) \
        For example, for January 2012, century = 20, year = 12, month = 1")
    @nested
    struct Date
    {
        octet century;
        octet year;
        octet month;
        octet day;
    };

    @doc("ICE Unique Device Identification (UDI)")
    typedef string<MAX_ICE_UDI_LENGTH> ICE_UDI;

    @doc("For multiple instances of the same sensor. Use this type to disambiguate.")
    typedef long InstanceIdentifier;

    @doc("Assessment list")
    @nested
    struct AssessmentEntry
    {
        string<MEDIUM_STRING_LEN> name;
        string<LONG_STRING_LEN> value;
    };
    typedef sequence<AssessmentEntry, MAX_ASSESSMENT_ENTRIES> AssessmentList;

    @doc("MetricDataQuality object \
        The MetricDataQuality object indicates the status for a specified \
        measurement. It includes a validated data indicator.")
    struct MetricDataQuality
    {
        @key ICE_UDI udi;
        @key long metric_id;
        @key InstanceIdentifier instance_id;
        boolean validated_data;
    };

    const string MetricDataQualityTopic = "MetricDataQuality";

    @doc("PatientAssessment object \
        The PatientAssessment object defines patient assessment attributes.")
    struct PatientAssessment
    {
        @key string<LONG_STRING_LEN> operator_id;
        @doc("UTC")
        AbsoluteTime date_and_time;
        AssessmentList assessments;
    };

    const string PatientAssessmentTopic = "PatientAssessment";

};
